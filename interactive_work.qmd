---
title: "interactive_work"
---

```{r}
library(data.table)
library(ggplot2)
library(tidytext)
library(readr)
library(dplyr)
library(readxl)
library(leaflet)
library(DescTools)
library(superheat)
library(tidyr)
library(plotly)
dat <- read_excel("DataSurvey_cleanup.xlsx")

#unique(dat$interest)
dat <- dat %>%
  filter(!is.na(interest)) %>%
  mutate(interest = recode(interest,
                           "0t at All Interested" = 0,
                           "0t Very Interested" = 1,
                           "Somewhat Interested"    = 2,
                           "Interested"    = 3,
                           "Very Interested"  = 4,
                           .default = 5  # 5 there shouldnt be 5s, NO 5s
  ))

#unique(dat$EmpStat)
dat <- dat %>% 
  filter(!is.na(EmpStat)) %>%
  mutate(EmpStat = recode(EmpStat,
                          "Unemployed" = 0,
                          "Part-time (<35 hours/week)" = 1,
                          "Full-time (35+ hours/week)" = 2,
                          "Student" = 3,
                          "Retired" = 4,
                          "Homemaker" = 5,
                          "Disabled" = 6, 
                          .default = 7  # there should be no 7
  ))

#unique(dat$AnnualIncome)
dat <- dat %>% 
  filter(!is.na(AnnualIncome)) %>%
  mutate(AnnualIncome = recode(AnnualIncome,
                               "Less than $10,000" = 1,
                               "$10,001 - $40,000"  = 2,
                               "$40,001 - $80,000" = 3,
                               "$80,001 - $100,000" = 4,
                               "$100,001 - $120,000" = 5,
                               "$120,000 or more" = 6,
                               .default = 0  # 0 here is no income
  ))

#unique(dat$Ed)
dat <- dat %>% 
  filter(!is.na(Ed)) %>%
  mutate(Ed = recode(Ed,
                     "8th grade or less"   = 0,
                     "Some high school, but did 0t graduate"  = 1,
                     "High school graduate or GED"  = 2,
                     "Associate degree"  = 3,
                     "Bachelor's degree (B.A., B.S., etc.)"  = 4,
                     "Master's degree (MA, MBA, etc.)"  = 5,
                     "Doctorate (PhD, MD, etc.)"  = 6,
                     .default = 7  #there should be no 7
  ))

#unique(dat$LivingSit)
dat <- dat %>% 
  filter(!is.na(LivingSit)) %>%
  mutate(LivingSit = recode(LivingSit,
                            "I am homeless/live in a shelter"   = 0,
                            "I rent"   = 1,
                            "I or someone in my household owns the home without a mortgage"  = 2,
                            "I or someone in my household owns the home with a mortgage"   = 3,
                            .default = 4  # there should be no 4s
  ))

#unique(dat$EnglishProf)
dat <- dat %>% 
  filter(!is.na(EnglishProf)) %>%
  mutate(EnglishProf = recode(EnglishProf,
                              "0t at All"   = 0,
                              "0t Well"   = 1,
                              "Well"   = 2,
                              "Very Well"  = 3,
                              .default = 4  # there should be no 4
  ))

#unique(dat$HelpMedLit)
dat <- dat %>% 
  filter(!is.na(HelpMedLit)) %>%
  mutate(HelpMedLit = recode(HelpMedLit,
                             "Never"    = 0,
                             "Rarely"   = 1,
                             "Sometimes"   = 2,
                             "Often"    = 3,
                             "Always" = 4,
                             .default = 5  # there should be no 5
  ))


#unique(dat$Location)
dat <- dat %>% 
  filter(!is.na(Location)) %>%
  mutate(Location = recode(Location,
                           "Rural area (0t too many people, large amount of undeveloped/farmland)" = 0,
                           "Suburbs (Town, outside of a city)" = 1,
                           "City (A lot of people, city)"    = 2,
                           .default = 3  # there should be no 3
  ))


#unique(dat$Insurance)
dat <- dat %>% 
  filter(!is.na(Insurance)) %>%
  mutate(Insurance = recode(Insurance,
                            "0, I am 0T covered by a health insurance plan" = 0,
                            "1, I have a health insurance plan"  = 1, 
                            .default = 2  # 2 here is I DONT KNOW
  ))


#unique(dat$InsuranceType)
dat <- dat %>%
  filter(!is.na(InsuranceType)) %>%
  mutate(InsuranceType = recode(InsuranceType,
                                "I have public insurance"  = 0,
                                "Private insurance that I buy on my own" = 1,
                                "Private insurance through my employer" = 2,
                                "I have a mix of private and public" = 3,
                                "No Health Insurance or Unknown" = 4,
                                .default = 5  # should be no 5 now
  ))

#unique(dat$AffordMed)
dat <- dat %>% 
  filter(!is.na(AffordMed)) %>%
  mutate(AffordMed = recode(AffordMed,
                            "I am almost never able to afford the medical care I need" = 0,
                            "I am often 0t able to afford the medical care I need"  = 1, 
                            "I can usually afford the medical care I need"   = 2,
                            "I can afford the medical care I need"   = 3,
                            "I can always afford the medical care I need"  = 4, 
                            "NA - No Health Insurance" = 5,
                            .default = 6  # should be no 6 here now, 
  ))


#unique(dat$Gender)
dat <- dat %>%
  filter(!is.na(Gender)) %>%
  mutate(Gender = recode(Gender,
                         "Male"  = 0, 
                         "Female"  = 1, 
                         "Transgender Male/Transgender Man"= 2,
                         "Transgender Female/Transgender Woman"= 3,
                         "0n-Binary/Gender 0n-Confirming" = 4, 
                         "Gender Queer/Gender Fluid"  = 5, 
                         "A0ther Identity" = 6,
                         .default = 7  #there should be no 7
  ))

#unique(dat$Benefit)
dat <- dat %>%
  filter(!is.na(Benefit)) %>%
  mutate(Benefit = recode(Benefit,
                          "0ne - I do 0t believe there are benefits"= 0, 
                          "Possibility of receiving monetary compensation"= 1, 
                          "Possibility of improving my health"= 2,
                          "Possibility of contributing to science"= 3,
                          "Possibility of improving treatment for others with my disease/condition" = 4, 
                          "Possibility of receiving free medication/medical procedures/care"  = 5, 
                          "Possibility of receiving better medical care and attention"  = 6,
                          "Possibility of trying a new treatment for my disease/condition"=7,
                          .default = 8  #is other here
  ))

#unique(dat$Risk)
dat <- dat %>%
  filter(!is.na(Risk)) %>%
  mutate(Risk = recode(Risk,
                       "0ne - I do 0t believe there are risks"= 0, 
                       "There may be side effects/risk to my overall health"= 1, 
                       "Might receive a placebo / sugar pill"    = 2,
                       "My private medical information could be made public"      = 3,
                       "Could only get the study medicine for a limited amount of time" = 4, 
                       "Might have to stop my current treatments"  = 5, 
                       "Costs" = 6,
                       "Fear of Unknown"=7,
                       .default = 8  #is other, there should be other
  ))

dat <- dat %>%
  mutate(total_race = case_when(
    RaceW == 'White' ~ 0,
    RaceB == 'Black or African American' ~ 1,
    RaceA == 'Asian' ~ 2,
    RacePI == 'Native Hawaiian or Pacific Islander' ~ 3,
    RaceL == 'Hispanic or Lati0' ~ 4,
    RaceOther == 'Other - Write In (Required)' ~ 5,
    Race0Ans == 'Prefer 0t to answer' ~ 6,
    TRUE ~ NA_integer_
  ))

dat <- dat %>%
  mutate(motives = case_when(
    Motivate1 == '1' ~ 0,
    Motivate2 == '1' ~ 1,
    Motivate3 == '1' ~ 2,
    Motivate4 == '1' ~ 3,
    RaceL == 'Hispanic or Lati0' ~ 4,
    RaceOther == 'Other - Write In (Required)' ~ 5,
    Race0Ans == 'Prefer 0t to answer' ~ 6,
    TRUE ~ NA_integer_
  ))

## continuous variables 

dat <- dat %>% 
  filter(!is.na(Household)) %>%
  mutate(Household = recode(Household,
                            "0" = 0,
                            "1" = 1,
                            "2"  = 2,
                            "3" = 3,
                            "4" = 4,
                            "5" = 5, 
                            "More than 5" = 6, # 6 mean more than 5
                            .default = 7  # THERE SHOULD BE NO 7
  ))

dat <- dat %>% 
  filter(!is.na(Dependents)) %>%
  mutate(Dependents = recode(Dependents,
                             "0" = 0,
                             "1" = 1,
                             "2"  = 2,
                             "3" = 3,
                             "4" = 4,
                             "5" = 5,
                             "More than 5" = 6, # 6 mean more than 5
                             .default = 7  # THERE SHOULD BE NO 7
  ))




dat$EmpStat_Label <- factor(dat$EmpStat, levels = 0:6, labels = c(
  "Unemployed", "Part-time", "Full-time", "Student", "Retired", "Homemaker", "Disabled"
))
dat$AnnualIncome_Label <- factor(dat$AnnualIncome, levels = 0:6, labels = c(
  "NA-No Income", "<$10,000", "$10,001-$40,000", "$40,001-$80,000", "$80,001-$100,000", "$100,001-$120,000", ">$120,000"
))
dat$Ed_Label <- factor(dat$Ed, levels = 0:6, labels = c(
  "8th or less", "Some High School", "GED", "Associates", "Bachelors", "Masters", "Doctorate"
))
dat$LivingSit_Label <- factor(dat$LivingSit, levels = 0:3, labels = c(
  "Homeless", "Rent", "Own home w/o mortgage", "Own home w/ mortgage"
))
dat$EnglishProf_Label <- factor(dat$EnglishProf, levels = 0:3, labels = c(
  "Not at All", "Not Well", "Well", "Very Well"
))
dat$HelpMedLit_Label <- factor(dat$HelpMedLit, levels = 0:4, labels = c(
  "Never", "Rarely", "Sometimes", "Often", "Always"
))
dat$Location_Label <- factor(dat$Location, levels = 0:2, labels = c(
  "Rural", "Suburbs", "City"
))
dat$Insurance_Label <- factor(dat$Insurance, levels = 0:1, labels = c(
  "No Health Insurance", "Have Health Insurance"
))
dat$InsuranceType_Label <- factor(dat$InsuranceType, levels = 0:4, labels = c(
  "Public insurance", "Private Insurance that I buy on my own", "Private Insurance Through Employer", "Mix of Private and Public", "No Health Insurance or Unknown"
))
dat$AffordMed_Label <- factor(dat$AffordMed, levels = 0:5, labels = c(
  "Never Able to Afford", "Often Not Able to Afford",  "Can Usually Afford", "Can Afford", "Can Always Afford", "NA - No Health Insurance"
))
dat$Gender_Label <- factor(dat$Gender, levels = 0:6, labels = c(
  "Male", "Female", "Transgender Male", "Transgender Female", "Non-Binary", "Gender Fluid", "Other"
))
dat$total_race_Label <- factor(dat$total_race, levels = 0:6, labels = c(
  "White", "Black", "Asian", "Native Hawaiian or Pacific Islander", "Hispanic", "Other", "No Answer"
))
dat$Benefit_Label <- factor(dat$Benefit, levels = 0:8, labels = c(
  "No Benefits", "Monetary Compensation", "Improving my Health", "Contributing to Science",
  "Improving Treatment for Others with my Disease/Condition", "Receiving Free Medication/Medical Procedures/Care",
  "Receiving Better Medical Care and Attention", "Trying a New Treatment for my Disease/Condition",
  "Other Reason"
))
dat$Risk_Label <- factor(dat$Risk, levels = 0:8, labels = c(
  "No Risks", "Side effects/risk to my overall health", "Might receive placebo", 
  "Private medical information could be made public",
  "Only get the study medicine for a limited amount of time", 
  "Might have to stop my current treatments", "Costs", "Fear of unknown",
  "Other reason"
))

dat$interest_Label <- factor(dat$interest, levels = 0:4, labels = c(
  "Not At All Interested", 
  "Not Very Interested", 
  "Somewhat Interested",
  "Interested", 
  "Very Interested"
))
trial_interest = factor(dat$interest, levels = c(0, 1, 2, 3, 4), labels = c("Not At All Interested", 
                                                                            "Not Very Interested", 
                                                                            "Somewhat Interested",
                                                                            "Interested", 
                                                                            "Very Interested"))





sub_dat = subset(dat, select = c(Gender_Label, State, Age, interest_Label, WorkExp, Household, Dependents, EmpStat_Label, 
                                 total_race_Label, AnnualIncome_Label, Ed_Label,
                                 LivingSit_Label, EnglishProf_Label, HelpMedLit_Label, Location_Label,
                                 Insurance_Label, AffordMed_Label, Benefit_Label, Risk_Label))
#head(sub_dat)






```

```{r}
library(DT)
datatable(sub_dat)
```

interactive

```{r}
sub_dat %>%
  plot_ly(x=~Age, type="histogram")

sub_dat %>%
  plot_ly(x=~WorkExpstr, type="histogram")
```

attempt to make 3 var heatmap plot, not working

```{r}
dat
```

interactive heatmaps, need to run the heatmaps first to get tables

```{r}
benefits_matrix <- as.matrix(benefits_gender)

# Generate the plot using plot_ly
plot_ly(
  x = colnames(benefits_matrix), 
  y = rownames(benefits_matrix),
  z = ~benefits_matrix,
  type = "heatmap",
  colorscale = "Viridis",  # You can adjust the color scale as needed
  showscale = TRUE
) %>%
  layout(
    xaxis = list(title = "Gender"),
    yaxis = list(title = "Benefit Label"),
    title = "Perceived Benefits of Trials by Gender"
  )



risk_matrix <- as.matrix(risk_gender)

# Generate the plot using plot_ly
plot_ly(
  x = colnames(risk_matrix), 
  y = rownames(risk_matrix),
  z = ~risk_matrix,
  type = "heatmap",
  colorscale = "Reds",  # You can adjust the color scale as needed
  showscale = TRUE
) %>%
  layout(
    xaxis = list(title = "Gender"),
    yaxis = list(title = "Risk Label"),
    title = "Perceived Risks of Trials by Gender"
  )
```

```{r}

```

```{r}
benefits_ed_matrix <- as.matrix(benefits_ed)

# Generate the plot using plot_ly
plot_ly(
  x = colnames(benefits_ed_matrix), 
  y = rownames(benefits_ed_matrix),
  z = ~benefits_ed_matrix,
  type = "heatmap",
  colorscale = "Viridis",  # You can adjust the color scale as needed
  showscale = TRUE
) %>%
  layout(
    xaxis = list(title = "Education Level"),
    yaxis = list(title = "Benefit Label"),
    title = "Perceived Benefits of Trials by Education Level"
  )



risk_ed_matrix <- as.matrix(risk_ed)

# Generate the plot using plot_ly
plot_ly(
  x = colnames(risk_ed_matrix), 
  y = rownames(risk_ed_matrix),
  z = ~risk_ed_matrix,
  type = "heatmap",
  colorscale = "Reds",  # You can adjust the color scale as needed
  showscale = TRUE
) %>%
  layout(
    xaxis = list(title = "Education Level"),
    yaxis = list(title = "Risk Label"),
    title = "Perceived Risks of Trials by Education Level"
  )
```

```{r}

```

```{r}
benefits_eng_matrix <- as.matrix(benefits_eng)

# Generate the plot using plot_ly
plot_ly(
  x = colnames(benefits_eng_matrix), 
  y = rownames(benefits_eng_matrix),
  z = ~benefits_eng_matrix,
  type = "heatmap",
  colorscale = "Viridis",  # You can adjust the color scale as needed
  showscale = TRUE
) %>%
  layout(
    xaxis = list(title = "English Proficiency"),
    yaxis = list(title = "Benefit Label"),
    title = "Perceived Benefits of Trials by English Proficiency"
  )



risk_eng_matrix <- as.matrix(risk_eng)

# Generate the plot using plot_ly
plot_ly(
  x = colnames(risk_eng_matrix), 
  y = rownames(risk_eng_matrix),
  z = ~risk_eng_matrix,
  type = "heatmap",
  colorscale = "Reds",  # You can adjust the color scale as needed
  showscale = TRUE
) %>%
  layout(
    xaxis = list(title = "English Proficiency"),
    yaxis = list(title = "Risk Label"),
    title = "Perceived Risks of Trials by English Proficiency"
  )
```

```{r}
benefits_lit_matrix <- as.matrix(benefits_lit)

# Generate the plot using plot_ly
plot_ly(
  x = colnames(benefits_lit_matrix), 
  y = rownames(benefits_lit_matrix),
  z = ~benefits_lit_matrix,
  type = "heatmap",
  colorscale = "Viridis",  # You can adjust the color scale as needed
  showscale = TRUE
) %>%
  layout(
    xaxis = list(title = "Help in Medical Literacy"),
    yaxis = list(title = "Benefit Label"),
    title = "Perceived Benefits of Trials by Medical Literacy"
  )

risk_lit_matrix <- as.matrix(risk_lit)

# Generate the plot using plot_ly
plot_ly(
  x = colnames(risk_lit_matrix), 
  y = rownames(risk_lit_matrix),
  z = ~risk_lit_matrix,
  type = "heatmap",
  colorscale = "Reds",  # You can adjust the color scale as needed
  showscale = TRUE
) %>%
  layout(
    xaxis = list(title = "Help in Medical Literacy"),
    yaxis = list(title = "Risk Label"),
    title = "Perceived Risks of Trials by Medical Literacy"
  )
```

```{r}
benefits_loc_matrix <- as.matrix(benefits_loc)

# Generate the plot using plot_ly
plot_ly(
  x = colnames(benefits_loc_matrix), 
  y = rownames(benefits_loc_matrix),
  z = ~benefits_loc_matrix,
  type = "heatmap",
  colorscale = "Viridis",  # You can adjust the color scale as needed
  showscale = TRUE
) %>%
  layout(
    xaxis = list(title = "Location"),
    yaxis = list(title = "Benefit Label"),
    title = "Perceived Benefits of Trials by Location"
  )


risk_loc_matrix <- as.matrix(risk_loc)

# Generate the plot using plot_ly
plot_ly(
  x = colnames(risk_loc_matrix), 
  y = rownames(risk_loc_matrix),
  z = ~risk_loc_matrix,
  type = "heatmap",
  colorscale = "Reds",  # You can adjust the color scale as needed
  showscale = TRUE
) %>%
  layout(
    xaxis = list(title = "Location"),
    yaxis = list(title = "Risk Label"),
    title = "Perceived Risks of Trials by Location"
  )

```

geo map

```{r}
all_states <- map_data("state")

stateData <- left_join(all_states,dat,by="region")

# weighted average interest level
state_avg_interest <- stateData %>%
  group_by(State) %>%
  summarize(
    total_people = n(),          
    weighted_avg_interest = sum(interest) / total_people  
  )
final_data <- left_join(stateData, state_avg_interest, by = "State")

```

```{r}

gg <- ggplot() +
  geom_polygon(
    data = final_data,
    mapping = aes(x = long, y = lat, group = group, fill = weighted_avg_interest),
    color = "grey50"
  ) +
  scale_fill_gradientn(
    name = "Interest Level",
    colors = terrain.colors(100)
  ) +
  coord_map() +
  theme_classic() +
  theme(
    axis.ticks.y = element_blank(),
    axis.text.y = element_blank(),
    axis.ticks.x = element_blank(),
    axis.text.x = element_blank(),
    legend.title = element_text(size = 10),
    plot.title = element_text(size = 12)
  ) +
  ggtitle("Average Interest in Clinical Trial Level (0=Not all Interested, 5=Very Interested) by State")

# Convert ggplot to plotly
ggplotly(gg)

```

```{r}
map_income <- ggplot() +
  geom_polygon(data = final_data, mapping = aes(x = long, y = lat, group = group, fill = weighted_avg_income), color = "grey50") +
  scale_fill_gradientn(name = "Income", colors = viridisLite::plasma(100)) + 
  coord_map() +
  theme_minimal() +
  theme(axis.ticks = element_blank(), axis.text = element_blank()) +
  ggtitle("Average Income Group (0: No Income, 5: >$120,000) Level by State")

ggplotly(map_income)
```

```{r}


```

scatter of avg interest by state's avg income

```{r}
all_states <- map_data("state")

stateData <- left_join(all_states,dat,by="region")

# weighted average interest level
state_avg_interest <- stateData %>%
  group_by(State) %>%
  summarize(
    total_people = n(),          
    weighted_avg_interest = sum(interest) / total_people  
  )
final_data <- left_join(stateData, state_avg_interest, by = "State")

# weighted average income level
state_avg_income <- stateData %>%
  group_by(State) %>%
  summarize(
    total_people = n(),          
    weighted_avg_income = sum(AnnualIncome) / total_people  
  )
final_data <- left_join(stateData, state_avg_income, by = "State")

stateData <- left_join(stateData, state_avg_interest, by = "State")
stateData <- left_join(stateData, state_avg_income, by = "State")
```

```{r}
ggplot( data = stateData, mapping = aes(x = weighted_avg_interest, y = weighted_avg_income)) +
  geom_point() +
  geom_smooth(method = "lm", se = FALSE)
   
```

```{r}
# i dont think this is helpful?

# Stacked bar chart for "risk" and "income"
ggplot(data = dat, aes(x = Risk_Label, fill = AnnualIncome_Label)) +
  geom_bar(position = "fill") +
  xlab("Risk" ) +
  ylab("Proportion") +
  ggtitle("Risk Income")+
   labs(fill = "Income") +
  theme_minimal() +
   theme(axis.text.x = element_text(angle = 45, hjust = 1))


ggplot(data = dat, aes(x = Benefit_Label, fill = AnnualIncome_Label)) +
  geom_bar(position = "fill") +
  xlab("Benefit" ) +
  ylab("Proportion") +
  ggtitle("Benefit Income")+
   labs(fill = "Income") +
  theme_minimal() +
   theme(axis.text.x = element_text(angle = 45, hjust = 1))

```

```{r}
head(dat)
```
